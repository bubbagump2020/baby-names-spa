{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get, patch, post } from 'axios';\nimport { getBabies, enableBaby, disableBaby, addBaby } from '../redux/actions/baby-actions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst BabyNameForm = () => {\n  const dispatch = useDispatch();\n  const {\n    babiesList\n  } = useSelector(state => ({\n    babiesList: state.babiesList\n  }));\n  const [baby, setBaby] = React.useState({\n    list_id: parseInt(localStorage.getItem('user_id')),\n    baby_name: \"\"\n  });\n  React.useEffect(() => {\n    const gettingBabies = async () => {\n      let babies = [];\n\n      try {\n        const response = await get(\"http://localhost:8888/.netlify/functions/babies-index\"); // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n\n        if (response.status === 200) {\n          babies = response.data;\n          dispatch(getBabies(babies));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    gettingBabies();\n  }, []);\n\n  const showBabies = () => {\n    let user = parseInt(localStorage.getItem(\"user_id\"));\n    return babiesList.babies.map(baby => {\n      if (user === baby.list_id) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          key: baby.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 43\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          onClick: handleClick,\n          id: baby.id,\n          style: {\n            textDecorationLine: baby.enabled ? \"none\" : \"line-through\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }\n        }, baby.baby_name)));\n      }\n    });\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setBaby({ ...baby,\n      baby_name: e.target.value\n    });\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let thisBaby = {};\n    let babies = babiesList.babies;\n\n    for (let i = 0; i < babies.length; i++) {\n      if (parseInt(e.target.id) === babies[i].id) {\n        thisBaby = babies[i];\n      }\n    }\n\n    if (thisBaby.enabled) {\n      thisBaby.enabled = false;\n      dispatch(disableBaby(thisBaby.id));\n    } else {\n      thisBaby.enabled = true;\n      dispatch(enableBaby(thisBaby.id));\n    }\n\n    let babyRequest = {\n      \"baby\": {\n        \"id\": thisBaby.id,\n        \"enabled\": thisBaby.enabled\n      }\n    };\n\n    try {\n      await patch(`http://localhost:8888/.netlify/functions/update-baby`, babyRequest); // await patch(\"https://baby-maker-2000.netlify.app/.netlify/functions/update-baby\", babyRequest)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  window.onload = function () {\n    let element = document.getElementById(\"name-list\");\n    element.scrollTop = element.scrollHeight;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addBaby(baby));\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: encode({\n        \"form-name\": \"baby\",\n        ...baby\n      })\n    }).then(response => console.log(response)).catch(error => console.log(error));\n  };\n\n  console.log(baby);\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, \"The Baby Maker 2000\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, \"Simply put in a name and it'll be saved!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, \"Note: To return to this list save your URL some where safe\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"Name!\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Baby Name\",\n    name: \"baby-name\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, \"Make Baby!\")))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Baby Names!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"name-list\",\n    style: {\n      listStyle: \"none\",\n      overflowAnchor: \"bottom\",\n      overflow: \"scroll\",\n      height: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, showBabies()))));\n};\n\nexport default BabyNameForm;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx"],"names":["React","useDispatch","useSelector","get","patch","post","getBabies","enableBaby","disableBaby","addBaby","Container","Row","Col","Form","Jumbotron","Button","encode","data","Object","keys","map","key","encodeURIComponent","join","BabyNameForm","dispatch","babiesList","state","baby","setBaby","useState","list_id","parseInt","localStorage","getItem","baby_name","useEffect","gettingBabies","babies","response","status","err","console","log","showBabies","user","cursor","id","handleClick","textDecorationLine","enabled","handleChange","e","preventDefault","target","value","thisBaby","i","length","babyRequest","window","onload","element","document","getElementById","scrollTop","scrollHeight","handleSubmit","fetch","method","headers","body","then","catch","error","margin","fontSize","textAlign","listStyle","overflowAnchor","overflow","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,WAAhC,EAA6CC,OAA7C,QAA4D,+BAA5D;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACrB,SAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EACFG,GADE,CACEC,GAAG,IAAIC,kBAAkB,CAACD,GAAD,CAAlB,GAA0B,GAA1B,GAAgCC,kBAAkB,CAACL,IAAI,CAACI,GAAD,CAAL,CAD3D,EAEFE,IAFE,CAEG,GAFH,CAAP;AAGH,CAJD;;AAMA,MAAMC,YAAY,GAAG,MAAM;AAEvB,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAM;AAAEyB,IAAAA;AAAF,MAAiBxB,WAAW,CAACyB,KAAK,KAAK;AAAED,IAAAA,UAAU,EAAEC,KAAK,CAACD;AAApB,GAAL,CAAN,CAAlC;AACA,QAAM,CAAEE,IAAF,EAAQC,OAAR,IAAmB7B,KAAK,CAAC8B,QAAN,CAAe;AACpCC,IAAAA,OAAO,EAAEC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CADmB;AAEpCC,IAAAA,SAAS,EAAE;AAFyB,GAAf,CAAzB;AAKAnC,EAAAA,KAAK,CAACoC,SAAN,CAAgB,MAAM;AAClB,UAAMC,aAAa,GAAG,YAAY;AAE/B,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAI;AACC,cAAMC,QAAQ,GAAG,MAAMpC,GAAG,CAAC,uDAAD,CAA1B,CADD,CAEC;;AACA,YAAIoC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AACpBF,UAAAA,MAAM,GAAGC,QAAQ,CAACtB,IAAlB;AACAQ,UAAAA,QAAQ,CAACnB,SAAS,CAACgC,MAAD,CAAV,CAAR;AACP;AACL,OAPD,CAOE,OAAOG,GAAP,EAAW;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACJ;AAEH,KAdD;;AAeAJ,IAAAA,aAAa;AAChB,GAjBD,EAiBG,EAjBH;;AAmBA,QAAMO,UAAU,GAAG,MAAM;AACrB,QAAIC,IAAI,GAAGb,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAnB;AACA,WAAOR,UAAU,CAACY,MAAX,CAAkBlB,GAAlB,CAAsBQ,IAAI,IAAI;AACjC,UAAIiB,IAAI,KAAKjB,IAAI,CAACG,OAAlB,EAA0B;AACtB,4BACI;AAAM,UAAA,KAAK,EAAE;AAACe,YAAAA,MAAM,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,GAAG,EAAElB,IAAI,CAACmB,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB,eACI;AAAG,UAAA,OAAO,EAAEC,WAAZ;AAAyB,UAAA,EAAE,EAAEpB,IAAI,CAACmB,EAAlC;AAAsC,UAAA,KAAK,EAAE;AAACE,YAAAA,kBAAkB,EAAErB,IAAI,CAACsB,OAAL,GAAe,MAAf,GAAwB;AAA7C,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKtB,IAAI,CAACO,SADV,CADJ,CADJ,CADJ;AASH;AACJ,KAZM,CAAP;AAaH,GAfD;;AAiBA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,CAAC,CAACE,MAAF,CAASC,KAArB;AACA1B,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWO,MAAAA,SAAS,EAAEiB,CAAC,CAACE,MAAF,CAASC;AAA/B,KAAD,CAAP;AACH,GAJD;;AAMA,QAAMP,WAAW,GAAG,MAAOI,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIG,QAAQ,GAAG,EAAf;AACA,QAAIlB,MAAM,GAAGZ,UAAU,CAACY,MAAxB;;AACA,SAAI,IAAImB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGnB,MAAM,CAACoB,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,UAAGzB,QAAQ,CAACoB,CAAC,CAACE,MAAF,CAASP,EAAV,CAAR,KAA0BT,MAAM,CAACmB,CAAD,CAAN,CAAUV,EAAvC,EAA0C;AACtCS,QAAAA,QAAQ,GAAGlB,MAAM,CAACmB,CAAD,CAAjB;AACH;AACJ;;AACD,QAAID,QAAQ,CAACN,OAAb,EAAqB;AACjBM,MAAAA,QAAQ,CAACN,OAAT,GAAmB,KAAnB;AACAzB,MAAAA,QAAQ,CAACjB,WAAW,CAACgD,QAAQ,CAACT,EAAV,CAAZ,CAAR;AACH,KAHD,MAGO;AACHS,MAAAA,QAAQ,CAACN,OAAT,GAAmB,IAAnB;AACAzB,MAAAA,QAAQ,CAAClB,UAAU,CAACiD,QAAQ,CAACT,EAAV,CAAX,CAAR;AACH;;AACD,QAAIY,WAAW,GAAG;AACd,cAAQ;AACJ,cAAMH,QAAQ,CAACT,EADX;AAEJ,mBAAWS,QAAQ,CAACN;AAFhB;AADM,KAAlB;;AAMA,QAAG;AACC,YAAM9C,KAAK,CAAE,sDAAF,EAAyDuD,WAAzD,CAAX,CADD,CAEC;AACH,KAHD,CAGE,OAAOlB,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GA5BD;;AA8BAmB,EAAAA,MAAM,CAACC,MAAP,GAAc,YAAW;AACrB,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAd;AACAF,IAAAA,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,YAA5B;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAIf,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA5B,IAAAA,QAAQ,CAAChB,OAAO,CAACmB,IAAD,CAAR,CAAR;AACAwC,IAAAA,KAAK,CAAC,GAAD,EAAM;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFF;AAGPC,MAAAA,IAAI,EAAEvD,MAAM,CAAC;AAAC,qBAAa,MAAd;AAAsB,WAAGY;AAAzB,OAAD;AAHL,KAAN,CAAL,CAKK4C,IALL,CAKUjC,QAAQ,IAAIG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CALtB,EAMKkC,KANL,CAMWC,KAAK,IAAIhC,OAAO,CAACC,GAAR,CAAY+B,KAAZ,CANpB;AAQH,GAXD;;AAaAhC,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AAEA,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAE+C,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAHJ,eAII,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,WAAtC;AAAkD,IAAA,IAAI,EAAC,WAAvD;AAAmE,IAAA,QAAQ,EAAEf,CAAC,IAAID,YAAY,CAACC,CAAD,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CAJJ,CADJ,CADJ,eAiBI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACwB,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAI,IAAA,EAAE,EAAC,WAAP;AAAmB,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,cAAc,EAAE,QAApC;AAA8CC,MAAAA,QAAQ,EAAE,QAAxD;AAAkEC,MAAAA,MAAM,EAAE;AAA1E,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrC,UAAU,EADf,CAFJ,CAjBJ,CADJ,CADJ;AA4BH,CAjID;;AAmIA,eAAepB,YAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector} from 'react-redux'\nimport { get, patch, post } from 'axios'\nimport { getBabies, enableBaby, disableBaby, addBaby } from '../redux/actions/baby-actions'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const dispatch = useDispatch();\n    const { babiesList } = useSelector(state => ({ babiesList: state.babiesList }))\n    const [ baby, setBaby] = React.useState({ \n        list_id: parseInt(localStorage.getItem('user_id')),\n        baby_name: \"\"\n    })\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n\n           let babies = [];\n           try {\n                const response = await get(\"http://localhost:8888/.netlify/functions/babies-index\")\n                // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                if (response.status === 200){\n                        babies = response.data\n                        dispatch(getBabies(babies))\n                }\n           } catch (err){\n                console.log(err)\n           }\n\n        }\n        gettingBabies();\n    }, [])\n\n    const showBabies = () => {\n        let user = parseInt(localStorage.getItem(\"user_id\"))\n        return babiesList.babies.map(baby => {\n            if (user === baby.list_id){\n                return(\n                    <div  style={{cursor: \"pointer\"}}>\n                        <li key={baby.id}><br></br>\n                            <p onClick={handleClick} id={baby.id} style={{textDecorationLine: baby.enabled ? \"none\" : \"line-through\",}}>\n                                {baby.baby_name}\n                            </p>\n                        </li>\n                    </div>\n                )\n            }\n        })\n    }\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        console.log(e.target.value)\n        setBaby({ ...baby, baby_name: e.target.value })\n    }\n\n    const handleClick = async (e) => {\n        e.preventDefault()\n        let thisBaby = {}\n        let babies = babiesList.babies\n        for(let i = 0; i < babies.length; i++){\n            if(parseInt(e.target.id) === babies[i].id){\n                thisBaby = babies[i]\n            }\n        }\n        if (thisBaby.enabled){\n            thisBaby.enabled = false\n            dispatch(disableBaby(thisBaby.id))\n        } else {\n            thisBaby.enabled = true\n            dispatch(enableBaby(thisBaby.id))\n        }\n        let babyRequest = {\n            \"baby\": {\n                \"id\": thisBaby.id,\n                \"enabled\": thisBaby.enabled\n            }\n        }\n        try{\n            await patch(`http://localhost:8888/.netlify/functions/update-baby`, babyRequest)\n            // await patch(\"https://baby-maker-2000.netlify.app/.netlify/functions/update-baby\", babyRequest)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    window.onload=function() {\n        let element = document.getElementById(\"name-list\")\n        element.scrollTop = element.scrollHeight\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addBaby(baby))\n        fetch(\"/\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: encode({\"form-name\": \"baby\", ...baby})\n        })\n            .then(response => console.log(response))\n            .catch(error => console.log(error))\n\n    }\n\n    console.log(baby)\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group>\n                                <Form.Label>Name!</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Baby Name\" name=\"baby-name\" onChange={e => handleChange(e)}/>\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Make Baby!\n                            </Button>\n                        </Form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;"]},"metadata":{},"sourceType":"module"}
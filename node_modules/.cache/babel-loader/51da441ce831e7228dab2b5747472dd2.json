{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx\";\nimport React from 'react';\nimport { get, patch } from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBabies, babyName } from '../redux/actions/baby-actions';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Spinner from 'react-bootstrap/Spinner';\nimport './BabyNameForm.css';\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst BabyNameForm = () => {\n  const dispatch = useDispatch();\n  const {\n    baby\n  } = useSelector(state => ({\n    baby: state.babiesList.baby\n  }));\n  const {\n    babies\n  } = useSelector(state => ({\n    babies: state.babiesList.babies\n  }));\n  React.useEffect(() => {\n    console.log('getting babies');\n\n    const gettingBabies = async () => {\n      try {\n        const response = await get('http://localhost:8888/.netlify/functions/babies-index'); // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n\n        if (response.status === 200 && response.data !== \"\") {\n          dispatch(getBabies(response.data));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    gettingBabies();\n  }, []);\n\n  const handleSubmit = e => {\n    let newBabyArray = babies.babies;\n    newBabyArray.map(baby => {\n      if (baby.baby_name === e.target.value) {\n        console.log('Duplicate');\n      }\n    });\n    newBabyArray.push(baby);\n    dispatch(getBabies(newBabyArray)); // fetch(\"/index.html\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\",\n    //     },\n    //     body: encode({\"form-name\": \"baby\", ...baby})\n    // })\n    //     .then(() => alert(\"Submitted!\"))\n    //     .catch(error => console.log(error))\n\n    e.preventDefault();\n  };\n\n  const showBabies = () => {\n    if (babies.babies === undefined) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }\n      });\n    } else {\n      const sortedBabies = babies.babies.sort();\n      return sortedBabies.map(baby => {\n        const position = sortedBabies.indexOf(baby) + 1;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: baby.baby_name,\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 30\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          id: baby.baby_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }\n        }, position, \". \", baby.baby_name)));\n      });\n    }\n  }; // const handleClick = async (e) => {\n  //     e.preventDefault()\n  //     let thisBaby = {}\n  //     for(let i = 0; i < babies.length; i++){\n  //         if(e.target.id === babies[i].baby_name){\n  //             thisBaby = babies[i]\n  //         }\n  //     }\n  //     if (thisBaby.enabled){\n  //         thisBaby.enabled = false\n  //     } else {\n  //         thisBaby.enabled = true\n  //     }\n  //     let element = document.getElementById(thisBaby.baby_name)\n  //     element.style.textDecorationLine = thisBaby.enabled ? \"none\" : \"line-through\"\n  //     let babyRequest = {\n  //         \"baby\": {\n  //             \"list_id\": thisBaby.list_id,\n  //             \"baby_name\": thisBaby.baby_name,\n  //             \"enabled\": thisBaby.enabled\n  //         }\n  //     }\n  //     try{\n  //         await patch('https://baby-maker-2000.netlify.app/.netlify/functions/update-baby', babyRequest)\n  //     } catch (err) {\n  //         console.log(err)\n  //     }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \"The Baby Maker 2000\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"Simply put in a name and it'll be saved!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, \"Note: To return to this list save your URL some where safe\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"Name! \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    id: \"name-input\",\n    placeholder: \"Baby Name!\",\n    type: \"text\",\n    name: \"baby_name\",\n    value: baby.baby_name,\n    onChange: e => dispatch(babyName(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    hidden: true,\n    type: \"number\",\n    name: \"list_id\",\n    value: baby.list_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, \"Make baby!\"))))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Baby Names!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"name-list\",\n    style: {\n      listStyle: \"none\",\n      overflowAnchor: \"bottom\",\n      overflow: \"scroll\",\n      height: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, showBabies()))));\n};\n\nexport default BabyNameForm;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx"],"names":["React","get","patch","Container","useDispatch","useSelector","getBabies","babyName","Row","Col","Jumbotron","Spinner","encode","data","Object","keys","map","key","encodeURIComponent","join","BabyNameForm","dispatch","baby","state","babiesList","babies","useEffect","console","log","gettingBabies","response","status","err","handleSubmit","e","newBabyArray","baby_name","target","value","push","preventDefault","showBabies","undefined","sortedBabies","sort","position","indexOf","cursor","margin","list_id","fontSize","textAlign","listStyle","overflowAnchor","overflow","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,+BAApC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAO,oBAAP;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACrB,SAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EACFG,GADE,CACEC,GAAG,IAAIC,kBAAkB,CAACD,GAAD,CAAlB,GAA0B,GAA1B,GAAgCC,kBAAkB,CAACL,IAAI,CAACI,GAAD,CAAL,CAD3D,EAEFE,IAFE,CAEG,GAFH,CAAP;AAGH,CAJD;;AAMA,MAAMC,YAAY,GAAG,MAAM;AAEvB,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAWjB,WAAW,CAACkB,KAAK,KAAK;AAAED,IAAAA,IAAI,EAAEC,KAAK,CAACC,UAAN,CAAiBF;AAAzB,GAAL,CAAN,CAA5B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAapB,WAAW,CAACkB,KAAK,KAAK;AAAEE,IAAAA,MAAM,EAAEF,KAAK,CAACC,UAAN,CAAiBC;AAA3B,GAAL,CAAN,CAA9B;AAEAzB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,UAAMC,aAAa,GAAG,YAAY;AAC/B,UAAI;AACC,cAAMC,QAAQ,GAAG,MAAM7B,GAAG,CAAC,uDAAD,CAA1B,CADD,CAEC;;AACA,YAAI6B,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACjB,IAAT,KAAkB,EAAjD,EAAoD;AAC5CQ,UAAAA,QAAQ,CAACf,SAAS,CAACwB,QAAQ,CAACjB,IAAV,CAAV,CAAR;AACP;AACL,OAND,CAME,OAAOmB,GAAP,EAAW;AACRL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACJ;AACH,KAVD;;AAWAH,IAAAA,aAAa;AAChB,GAdD,EAcG,EAdH;;AAiBA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIC,YAAY,GAAGV,MAAM,CAACA,MAA1B;AACAU,IAAAA,YAAY,CAACnB,GAAb,CAAiBM,IAAI,IAAI;AACrB,UAAGA,IAAI,CAACc,SAAL,KAAmBF,CAAC,CAACG,MAAF,CAASC,KAA/B,EAAqC;AACjCX,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AACJ,KAJD;AAMAO,IAAAA,YAAY,CAACI,IAAb,CAAkBjB,IAAlB;AAEAD,IAAAA,QAAQ,CAACf,SAAS,CAAC6B,YAAD,CAAV,CAAR,CAVwB,CAWxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,IAAAA,CAAC,CAACM,cAAF;AACH,GAtBD;;AAwBA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAGhB,MAAM,CAACA,MAAP,KAAkBiB,SAArB,EAAgC;AAC5B,0BAAO,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AACH,YAAMC,YAAY,GAAGlB,MAAM,CAACA,MAAP,CAAcmB,IAAd,EAArB;AACA,aAAOD,YAAY,CAAC3B,GAAb,CAAiBM,IAAI,IAAI;AAC5B,cAAMuB,QAAQ,GAAGF,YAAY,CAACG,OAAb,CAAqBxB,IAArB,IAA6B,CAA9C;AACA,4BACI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACc,SAAf;AAA0B,UAAA,KAAK,EAAE;AAACW,YAAAA,MAAM,EAAE;AAAT,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL,eACI;AAAG,UAAA,EAAE,EAAEzB,IAAI,CAACc,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIS,QADJ,QACgBvB,IAAI,CAACc,SADrB,CADJ,CADJ,CADJ;AASH,OAXM,CAAP;AAYH;AACJ,GAlBD,CA/CuB,CAmEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAHJ,eAII;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,QAAQ,EAAEf,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,EAAE,EAAC,YAAnB;AAAgC,IAAA,WAAW,EAAC,YAA5C;AAAyD,IAAA,IAAI,EAAC,MAA9D;AAAqE,IAAA,IAAI,EAAC,WAA1E;AAAsF,IAAA,KAAK,EAAEX,IAAI,CAACc,SAAlG;AAA6G,IAAA,QAAQ,EAAEF,CAAC,IAAIb,QAAQ,CAACd,QAAQ,CAAC2B,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT,CAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,SAAjC;AAA2C,IAAA,KAAK,EAAEhB,IAAI,CAAC2B,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ,eAQU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARV,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,EAAE,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CATJ,CAJJ,CADJ,CADJ,eAqBI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAI,IAAA,EAAE,EAAC,WAAP;AAAmB,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,cAAc,EAAE,QAApC;AAA8CC,MAAAA,QAAQ,EAAE,QAAxD;AAAkEC,MAAAA,MAAM,EAAE;AAA1E,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,UAAU,EADf,CAFJ,CArBJ,CADJ,CADJ;AAgCH,CAlID;;AAoIA,eAAerB,YAAf","sourcesContent":["import React from 'react';\nimport { get, patch } from 'axios'\nimport Container from 'react-bootstrap/Container'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBabies, babyName } from '../redux/actions/baby-actions'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Spinner from 'react-bootstrap/Spinner'\nimport './BabyNameForm.css'\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const dispatch = useDispatch()\n    const { baby } = useSelector(state => ({ baby: state.babiesList.baby}))\n    const { babies } = useSelector(state => ({ babies: state.babiesList.babies}))\n\n    React.useEffect(() => {\n        console.log('getting babies')\n        const gettingBabies = async () => {\n           try {\n                const response = await get('http://localhost:8888/.netlify/functions/babies-index')\n                // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                if (response.status === 200 && response.data !== \"\"){\n                        dispatch(getBabies(response.data))\n                }\n           } catch (err){\n                console.log(err)\n           }\n        }\n        gettingBabies();\n    }, [])\n\n\n    const handleSubmit = (e) => {\n        let newBabyArray = babies.babies\n        newBabyArray.map(baby => {\n            if(baby.baby_name === e.target.value){\n                console.log('Duplicate')\n            }\n        })\n\n        newBabyArray.push(baby)\n        \n        dispatch(getBabies(newBabyArray))\n        // fetch(\"/index.html\", {\n        //     method: \"POST\",\n        //     headers: {\n        //         \"Content-Type\": \"application/x-www-form-urlencoded\",\n        //     },\n        //     body: encode({\"form-name\": \"baby\", ...baby})\n        // })\n        //     .then(() => alert(\"Submitted!\"))\n        //     .catch(error => console.log(error))\n        \n        e.preventDefault()\n    }\n\n    const showBabies = () => {\n        if(babies.babies === undefined) {\n            return <Spinner animation=\"border\" role=\"status\" />\n        } else {\n            const sortedBabies = babies.babies.sort()\n            return sortedBabies.map(baby => {\n                const position = sortedBabies.indexOf(baby) + 1\n                return(\n                    <div key={baby.baby_name} style={{cursor: \"pointer\"}}>\n                        <li ><br></br>\n                            <p id={baby.baby_name} >\n                               {position}. {baby.baby_name}\n                            </p>\n                        </li>\n                    </div>\n                )\n            })\n        }\n    }\n\n    // const handleClick = async (e) => {\n    //     e.preventDefault()\n    //     let thisBaby = {}\n    //     for(let i = 0; i < babies.length; i++){\n    //         if(e.target.id === babies[i].baby_name){\n    //             thisBaby = babies[i]\n    //         }\n    //     }\n    //     if (thisBaby.enabled){\n    //         thisBaby.enabled = false\n    //     } else {\n    //         thisBaby.enabled = true\n    //     }\n    //     let element = document.getElementById(thisBaby.baby_name)\n    //     element.style.textDecorationLine = thisBaby.enabled ? \"none\" : \"line-through\"\n    //     let babyRequest = {\n    //         \"baby\": {\n    //             \"list_id\": thisBaby.list_id,\n    //             \"baby_name\": thisBaby.baby_name,\n    //             \"enabled\": thisBaby.enabled\n    //         }\n    //     }\n    //     try{\n    //         await patch('https://baby-maker-2000.netlify.app/.netlify/functions/update-baby', babyRequest)\n    //     } catch (err) {\n    //         console.log(err)\n    //     }\n    // }\n\n   \n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <form id=\"form\" onSubmit={handleSubmit}>\n                            <div>\n                                <label>Name! </label>\n                                <div>\n                                    <input required id=\"name-input\" placeholder=\"Baby Name!\" type=\"text\" name=\"baby_name\" value={baby.baby_name} onChange={e => dispatch(babyName(e.target.value))} />\n                                    <input hidden type=\"number\" name=\"list_id\" value={baby.list_id} />\n                                    {/* <input hidden name=\"enabled\" checkbox value=\"true\"/> */}\n                                </div>\n                            </div><br></br>\n                            <div>\n                                <button type=\"submit\" id=\"submit-button\">Make baby!</button>\n                            </div>\n                        </form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;"]},"metadata":{},"sourceType":"module"}
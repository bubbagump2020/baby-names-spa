{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get, patch } from 'axios';\nimport { getBabies, disableBaby, enableBaby } from '../redux/actions/baby-actions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { toast } from 'react-toastify';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport './BabyNameForm.css';\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst BabyNameForm = () => {\n  const dispatch = useDispatch();\n  const {\n    babiesList\n  } = useSelector(state => ({\n    babiesList: state.babiesList.babies\n  }));\n  const [babies, setBabies] = React.useState([]);\n  const [baby, setBaby] = React.useState({\n    \"list-id\": parseInt(localStorage.getItem('list_id')),\n    \"baby-name\": \"\"\n  });\n  React.useEffect(() => {\n    const gettingBabies = async () => {\n      try {\n        // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n        const response = await get('http://localhost:8888/.netlify/functions/babies-index');\n\n        if (response.status === 200) {\n          setBabies(await response);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    gettingBabies();\n  }, [dispatch]);\n  React.useEffect(() => {\n    if (babies.data === undefined) {} else {\n      babies.data.push(baby);\n    }\n  }); // const showBabies = () => {\n  //     if(babies.data === undefined) {\n  //         return <Spinner animation=\"border\" role=\"status\" />\n  //     } else {\n  //         return babies.data.map(baby => {\n  //             return(\n  //                 <div key={baby.id} style={{cursor: \"pointer\"}}>\n  //                     <li ><br></br>\n  //                         <p onClick={handleClick} id={baby.id} style={{textDecorationLine: baby.enabled ? \"none\" : \"line-through\",}}>\n  //                             {baby.baby_name}\n  //                         </p>\n  //                     </li>\n  //                 </div>\n  //             )\n  //         })\n  //     }\n  // }\n\n  const handleChange = e => {\n    e.preventDefault();\n    const {\n      value\n    } = e.target;\n    setBaby({ ...baby,\n      \"baby-name\": value\n    });\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let thisBaby = {};\n    let babies = babiesList;\n\n    for (let i = 0; i < babies.length; i++) {\n      if (e.target.id === babies[i].id) {\n        thisBaby = babies[i];\n      }\n    }\n\n    if (thisBaby.enabled) {\n      thisBaby.enabled = false;\n      dispatch(disableBaby(thisBaby.id));\n    } else {\n      thisBaby.enabled = true;\n      dispatch(enableBaby(thisBaby.id));\n    }\n\n    let babyRequest = {\n      \"baby\": {\n        \"id\": thisBaby.id,\n        \"enabled\": thisBaby.enabled\n      }\n    };\n\n    try {\n      await patch('https://baby-maker-2000.netlify.app/.netlify/functions/update-baby', babyRequest);\n    } catch (err) {\n      console.log(err);\n    }\n  }; // window.onload=function() {\n  //     let element = document.getElementById(\"name-list\")\n  //     element.scrollTop = element.scrollHeight\n  // }\n\n\n  const handleSubmit = e => {\n    // let dupBaby = null\n    // babies.data.map(checkBaby => {\n    //     if(checkBaby.baby_name === baby['baby-name']){\n    //         dupBaby = checkBaby.baby_name\n    //     } \n    // })\n    // if (dupBaby !== null){\n    //     return alert('Baby Already Made')\n    // } else {\n    fetch(\"/index.html\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: encode({\n        \"form-name\": \"baby\",\n        ...baby\n      })\n    }).then(() => {\n      alert(\"baby made!\"); // React.useEffect(() => {\n      //     console.log(babies)\n      // }, babies)\n    }).catch(error => console.log(error)); // }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"The Baby Maker 2000\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"Simply put in a name and it'll be saved!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Note: To return to this list save your URL some where safe\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    netlify: true,\n    \"netlify-honeypot\": \"bot-fields\",\n    name: \"baby\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"form-name\",\n    value: \"baby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, \"Name! \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    id: \"name-input\",\n    placeholder: \"Baby Name!\",\n    type: \"text\",\n    name: \"baby-name\",\n    value: baby[\"baby-name\"],\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    hidden: \"true\",\n    type: \"number\",\n    name: \"list-id\",\n    value: baby.list_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, \"Make baby!\"))))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, \"Baby Names!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"name-list\",\n    style: {\n      listStyle: \"none\",\n      overflowAnchor: \"bottom\",\n      overflow: \"scroll\",\n      height: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default BabyNameForm;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx"],"names":["React","useDispatch","useSelector","get","patch","getBabies","disableBaby","enableBaby","Container","Row","Col","Jumbotron","toast","Spinner","Alert","encode","data","Object","keys","map","key","encodeURIComponent","join","BabyNameForm","dispatch","babiesList","state","babies","setBabies","useState","baby","setBaby","parseInt","localStorage","getItem","useEffect","gettingBabies","response","status","err","console","log","undefined","push","handleChange","e","preventDefault","value","target","handleClick","thisBaby","i","length","id","enabled","babyRequest","handleSubmit","fetch","method","headers","body","then","alert","catch","error","margin","list_id","fontSize","textAlign","listStyle","overflowAnchor","overflow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch,useSelector } from 'react-redux'\nimport { get, patch } from 'axios'\nimport { getBabies, disableBaby, enableBaby } from '../redux/actions/baby-actions'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport { toast } from 'react-toastify';\nimport Spinner from 'react-bootstrap/Spinner'\nimport Alert from 'react-bootstrap/Alert'\nimport './BabyNameForm.css'\n\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const dispatch = useDispatch();\n    const { babiesList } = useSelector(state => ({ babiesList: state.babiesList.babies }))\n    const [ babies, setBabies ] = React.useState([])\n    const [ baby, setBaby] = React.useState({ \n        \"list-id\": parseInt(localStorage.getItem('list_id')),\n        \"baby-name\": \"\"\n    })\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n           try {\n                // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                const response = await get('http://localhost:8888/.netlify/functions/babies-index')\n                if (response.status === 200){\n                        setBabies(await response)\n                }\n           } catch (err){\n                console.log(err)\n           }\n\n        }\n        gettingBabies();\n    }, [dispatch])\n\n    React.useEffect(() => {\n        if(babies.data === undefined){\n            \n        } else {\n            babies.data.push(baby)\n        }\n    })\n\n    // const showBabies = () => {\n    //     if(babies.data === undefined) {\n    //         return <Spinner animation=\"border\" role=\"status\" />\n    //     } else {\n    //         return babies.data.map(baby => {\n    //             return(\n    //                 <div key={baby.id} style={{cursor: \"pointer\"}}>\n    //                     <li ><br></br>\n    //                         <p onClick={handleClick} id={baby.id} style={{textDecorationLine: baby.enabled ? \"none\" : \"line-through\",}}>\n    //                             {baby.baby_name}\n    //                         </p>\n    //                     </li>\n    //                 </div>\n    //             )\n    //         })\n    //     }\n    // }\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        const { value } = e.target\n        setBaby({ ...baby, \"baby-name\": value })\n    }\n\n    const handleClick = async (e) => {\n        e.preventDefault()\n        let thisBaby = {}\n        let babies = babiesList\n        for(let i = 0; i < babies.length; i++){\n            if(e.target.id === babies[i].id){\n                thisBaby = babies[i]\n            }\n        }\n        if (thisBaby.enabled){\n            thisBaby.enabled = false\n            dispatch(disableBaby(thisBaby.id))\n        } else {\n            thisBaby.enabled = true\n            dispatch(enableBaby(thisBaby.id))\n        }\n        let babyRequest = {\n            \"baby\": {\n                \"id\": thisBaby.id,\n                \"enabled\": thisBaby.enabled\n            }\n        }\n        try{\n            await patch('https://baby-maker-2000.netlify.app/.netlify/functions/update-baby', babyRequest)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    // window.onload=function() {\n    //     let element = document.getElementById(\"name-list\")\n    //     element.scrollTop = element.scrollHeight\n    // }\n\n    const handleSubmit = (e) => {\n        // let dupBaby = null\n        // babies.data.map(checkBaby => {\n        //     if(checkBaby.baby_name === baby['baby-name']){\n        //         dupBaby = checkBaby.baby_name\n        //     } \n        // })\n\n        // if (dupBaby !== null){\n        //     return alert('Baby Already Made')\n        // } else {\n             fetch(\"/index.html\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    },\n                    body: encode({\"form-name\": \"baby\", ...baby})\n                })\n                    .then(() => {\n                        alert(\"baby made!\")\n                        // React.useEffect(() => {\n                        //     console.log(babies)\n                        // }, babies)\n                    })\n                    .catch(error => console.log(error))\n        // }\n        \n        e.preventDefault()\n    }\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <form id=\"form\" onSubmit={handleSubmit} netlify netlify-honeypot=\"bot-fields\" name=\"baby\" method=\"post\">\n                            <input type=\"hidden\" name=\"form-name\" value=\"baby\" />\n                            <div>\n                                <label>Name! </label>\n                                <div>\n                                    <input required id=\"name-input\" placeholder=\"Baby Name!\" type=\"text\" name=\"baby-name\" value={baby[\"baby-name\"]} onChange={handleChange} />\n                                    <input hidden=\"true\" type=\"number\" name=\"list-id\" value={baby.list_id} />\n                                </div>\n                            </div><br></br>\n                            <div>\n                                <button type=\"submit\" id=\"submit-button\">Make baby!</button>\n                            </div>\n                        </form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {/* {showBabies()} */}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;"]},"metadata":{},"sourceType":"module"}
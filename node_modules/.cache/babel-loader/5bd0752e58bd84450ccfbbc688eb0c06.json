{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx\";\nimport React from 'react';\nimport { get, patch } from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Spinner from 'react-bootstrap/Spinner';\nimport './BabyNameForm.css';\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst BabyNameForm = () => {\n  const [babies, setBabies] = React.useState([]);\n  const [baby, setBaby] = React.useState({\n    \"list-id\": parseInt(localStorage.getItem('list_id')),\n    \"baby-name\": \"\"\n  });\n  const [getBabiesNow, setGetBabiesNow] = React.useState(false);\n  React.useEffect(() => {\n    const gettingBabies = async () => {\n      try {\n        const response = await get('http://localhost:8888/.netlify/functions/babies-index'); // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n\n        if (response.status === 200) {\n          setBabies(await response.data);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    gettingBabies();\n  }, []);\n\n  const showBabies = () => {\n    if (babies === undefined) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return babies.map(baby => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: baby.id,\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 30\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          onClick: handleClick,\n          id: baby.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }\n        }, baby.baby_name)));\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    const gettingBabies = async () => {\n      try {\n        const response = await get('http://localhost:8888/.netlify/functions/babies-index'); // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n\n        setBabies(response.data);\n        console.log(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    gettingBabies();\n  }, [getBabiesNow]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    const {\n      value\n    } = e.target;\n    setBaby({ ...baby,\n      \"baby-name\": value\n    });\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let thisBaby = {};\n\n    for (let i = 0; i < babies.length; i++) {\n      if (e.target.id === babies[i].id) {\n        thisBaby = babies[i];\n      }\n    }\n\n    let element = document.getElementById(thisBaby.id);\n\n    if (thisBaby.enabled) {\n      thisBaby.enabled = false;\n      element.style.textDecorationLine = \"none\";\n    } else {\n      thisBaby.enabled = true;\n      element.style.textDecorationLine = \"line-through\";\n    }\n\n    let babyRequest = {\n      \"baby\": {\n        \"id\": thisBaby.id,\n        \"enabled\": thisBaby.enabled\n      }\n    };\n\n    try {\n      await patch('https://baby-maker-2000.netlify.app/.netlify/functions/update-baby', babyRequest);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  window.onload = function () {\n    let element = document.getElementById(\"name-list\");\n    element.scrollTop = element.scrollHeight;\n  };\n\n  const handleSubmit = e => {\n    if (!getBabiesNow) {\n      setGetBabiesNow(true);\n    } else {\n      setGetBabiesNow(false);\n    }\n\n    fetch(\"/index.html\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: encode({\n        \"form-name\": \"baby\",\n        ...baby\n      })\n    }).then(() => alert(\"Submitted!\")).catch(error => console.log(error));\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"The Baby Maker 2000\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"Simply put in a name and it'll be saved!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, \"Note: To return to this list save your URL some where safe\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    \"netlify-honeypot\": \"bot-fields\",\n    name: \"baby\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"form-name\",\n    value: \"baby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"Name! \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    id: \"name-input\",\n    placeholder: \"Baby Name!\",\n    type: \"text\",\n    name: \"baby-name\",\n    value: baby[\"baby-name\"],\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    hidden: true,\n    type: \"number\",\n    name: \"list-id\",\n    value: baby.list_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, \"Make baby!\"))))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, \"Baby Names!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"name-list\",\n    style: {\n      listStyle: \"none\",\n      overflowAnchor: \"bottom\",\n      overflow: \"scroll\",\n      height: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, showBabies()))));\n};\n\nexport default BabyNameForm;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx"],"names":["React","get","patch","Container","Row","Col","Jumbotron","Spinner","encode","data","Object","keys","map","key","encodeURIComponent","join","BabyNameForm","babies","setBabies","useState","baby","setBaby","parseInt","localStorage","getItem","getBabiesNow","setGetBabiesNow","useEffect","gettingBabies","response","status","err","console","log","showBabies","undefined","id","cursor","handleClick","baby_name","handleChange","e","preventDefault","value","target","thisBaby","i","length","element","document","getElementById","enabled","style","textDecorationLine","babyRequest","window","onload","scrollTop","scrollHeight","handleSubmit","fetch","method","headers","body","then","alert","catch","error","margin","list_id","fontSize","textAlign","listStyle","overflowAnchor","overflow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { get, patch } from 'axios'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Spinner from 'react-bootstrap/Spinner'\nimport './BabyNameForm.css'\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const [ babies, setBabies ] = React.useState([])\n    const [ baby, setBaby] = React.useState({ \n        \"list-id\": parseInt(localStorage.getItem('list_id')),\n        \"baby-name\": \"\"\n    })\n    const [ getBabiesNow, setGetBabiesNow ] = React.useState(false)\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n           try {\n                const response = await get('http://localhost:8888/.netlify/functions/babies-index')\n                // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                if (response.status === 200){\n                        setBabies(await response.data)\n                }\n           } catch (err){\n                console.log(err)\n           }\n        }\n        gettingBabies();\n    }, [])\n\n\n\n    const showBabies = () => {\n        if(babies === undefined) {\n            return <Spinner animation=\"border\" role=\"status\" />\n        } else {\n            return babies.map(baby => {\n                return(\n                    <div key={baby.id} style={{cursor: \"pointer\"}}>\n                        <li ><br></br>\n                            <p onClick={handleClick} id={baby.id} >\n                                {baby.baby_name}\n                            </p>\n                        </li>\n                    </div>\n                )\n            })\n        }\n    }\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n            try {\n                const response = await get('http://localhost:8888/.netlify/functions/babies-index')\n                // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                setBabies(response.data)\n                console.log(response.data)\n            } catch (err){\n                 console.log(err)\n            }\n         }\n        gettingBabies();\n    }, [getBabiesNow])\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        const { value } = e.target\n        setBaby({ ...baby, \"baby-name\": value })\n    }\n\n    const handleClick = async (e) => {\n        e.preventDefault()\n        let thisBaby = {}\n        for(let i = 0; i < babies.length; i++){\n            if(e.target.id === babies[i].id){\n                thisBaby = babies[i]\n            }\n        }\n        let element = document.getElementById(thisBaby.id)\n        if (thisBaby.enabled){\n            thisBaby.enabled = false\n            element.style.textDecorationLine = \"none\"\n        } else {\n            thisBaby.enabled = true\n            element.style.textDecorationLine = \"line-through\"\n        }\n        let babyRequest = {\n            \"baby\": {\n                \"id\": thisBaby.id,\n                \"enabled\": thisBaby.enabled\n            }\n        }\n        try{\n            await patch('https://baby-maker-2000.netlify.app/.netlify/functions/update-baby', babyRequest)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    window.onload=function() {\n        let element = document.getElementById(\"name-list\")\n        element.scrollTop = element.scrollHeight\n    }\n\n    const handleSubmit = (e) => {\n            if(!getBabiesNow){\n                setGetBabiesNow(true)\n            } else {\n                setGetBabiesNow(false)\n            }\n             fetch(\"/index.html\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    },\n                    body: encode({\"form-name\": \"baby\", ...baby})\n                })\n                    .then(() => alert(\"Submitted!\"))\n                    .catch(error => console.log(error))\n        e.preventDefault()\n    }\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <form id=\"form\" onSubmit={handleSubmit} netlify-honeypot=\"bot-fields\" name=\"baby\" method=\"post\">\n                            <input type=\"hidden\" name=\"form-name\" value=\"baby\" />\n                            <div>\n                                <label>Name! </label>\n                                <div>\n                                    <input required id=\"name-input\" placeholder=\"Baby Name!\" type=\"text\" name=\"baby-name\" value={baby[\"baby-name\"]} onChange={handleChange} />\n                                    <input hidden type=\"number\" name=\"list-id\" value={baby.list_id} />\n                                </div>\n                            </div><br></br>\n                            <div>\n                                <button type=\"submit\" id=\"submit-button\">Make baby!</button>\n                            </div>\n                        </form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;"]},"metadata":{},"sourceType":"module"}
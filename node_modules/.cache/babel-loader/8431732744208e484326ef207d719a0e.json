{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx\";\nimport React from 'react';\nimport { get, patch } from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBabies, babyName } from '../redux/actions/baby-actions';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Spinner from 'react-bootstrap/Spinner';\nimport './BabyNameForm.css';\nimport { toast } from 'react-toastify';\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst BabyNameForm = () => {\n  const dispatch = useDispatch();\n  const {\n    baby\n  } = useSelector(state => ({\n    baby: state.babiesList.baby\n  }));\n  const {\n    babies\n  } = useSelector(state => ({\n    babies: state.babiesList.babies\n  }));\n  React.useEffect(() => {\n    console.log('getting babies');\n\n    const gettingBabies = async () => {\n      try {\n        const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index');\n\n        if (response.status === 200 && response.data !== \"\") {\n          dispatch(getBabies(response.data));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    gettingBabies();\n  }, []);\n\n  const duplicateCheck = array => {\n    return new Set(array).size !== array.length;\n  };\n\n  const handleSubmit = e => {\n    console.log(baby);\n    babies.babies.push(baby);\n\n    if (duplicateCheck(babies.babies)) {\n      toast.error('Baby Already Made');\n    } else {\n      dispatch(getBabies(babies.babies));\n      fetch(\"/index.html\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: encode({\n          \"form-name\": \"baby\",\n          ...baby\n        })\n      }).then(() => alert(\"Submitted!\")).catch(error => console.log(error));\n      toast.success('Baby Made!');\n    }\n\n    e.preventDefault();\n  };\n\n  const showBabies = () => {\n    if (babies.babies === undefined) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }\n      });\n    } else {\n      console.log(babies);\n      const sortedBabies = babies.babies.sort();\n      return sortedBabies.map(baby => {\n        const position = sortedBabies.indexOf(baby) + 1;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: baby['baby-name'],\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 30\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          id: baby['baby-name'],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }\n        }, position, \". \", baby['baby-name'])));\n      });\n    }\n  }; // const handleClick = async (e) => {\n  //     e.preventDefault()\n  //     let thisBaby = {}\n  //     for(let i = 0; i < babies.length; i++){\n  //         if(e.target.id === babies[i].baby_name){\n  //             thisBaby = babies[i]\n  //         }\n  //     }\n  //     if (thisBaby.enabled){\n  //         thisBaby.enabled = false\n  //     } else {\n  //         thisBaby.enabled = true\n  //     }\n  //     let element = document.getElementById(thisBaby.baby_name)\n  //     element.style.textDecorationLine = thisBaby.enabled ? \"none\" : \"line-through\"\n  //     let babyRequest = {\n  //         \"baby\": {\n  //             \"list_id\": thisBaby.list_id,\n  //             \"baby_name\": thisBaby.baby_name,\n  //             \"enabled\": thisBaby.enabled\n  //         }\n  //     }\n  //     try{\n  //         await patch('https://baby-maker-2000.netlify.app/.netlify/functions/update-baby', babyRequest)\n  //     } catch (err) {\n  //         console.log(err)\n  //     }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"The Baby Maker 2000\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, \"Simply put in a name and it'll be saved!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, \"Note: To return to this list save your URL some where safe\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    name: \"baby\",\n    \"data-netlify\": \"true\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"Name! \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    id: \"name-input\",\n    placeholder: \"Baby Name!\",\n    type: \"text\",\n    name: \"baby-name\",\n    value: baby['baby-name'],\n    onChange: e => dispatch(babyName(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    hidden: true,\n    type: \"text\",\n    name: \"list-id\",\n    value: baby['list-id'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, \"Make baby!\"))))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Baby Names!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"name-list\",\n    style: {\n      listStyle: \"none\",\n      overflowAnchor: \"bottom\",\n      overflow: \"scroll\",\n      height: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, showBabies()))));\n};\n\nexport default BabyNameForm;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx"],"names":["React","get","patch","Container","useDispatch","useSelector","getBabies","babyName","Row","Col","Jumbotron","Spinner","toast","encode","data","Object","keys","map","key","encodeURIComponent","join","BabyNameForm","dispatch","baby","state","babiesList","babies","useEffect","console","log","gettingBabies","response","status","err","duplicateCheck","array","Set","size","length","handleSubmit","e","push","error","fetch","method","headers","body","then","alert","catch","success","preventDefault","showBabies","undefined","sortedBabies","sort","position","indexOf","cursor","margin","target","value","fontSize","textAlign","listStyle","overflowAnchor","overflow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { get, patch } from 'axios'\nimport Container from 'react-bootstrap/Container'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBabies, babyName } from '../redux/actions/baby-actions'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Spinner from 'react-bootstrap/Spinner'\nimport './BabyNameForm.css'\nimport { toast } from 'react-toastify'\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const dispatch = useDispatch()\n    const { baby } = useSelector(state => ({ baby: state.babiesList.baby}))\n    const { babies } = useSelector(state => ({ babies: state.babiesList.babies}))\n\n    React.useEffect(() => {\n        console.log('getting babies')\n        const gettingBabies = async () => {\n           try {\n                const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                if (response.status === 200 && response.data !== \"\"){\n                        dispatch(getBabies(response.data))\n                }\n           } catch (err){\n                console.log(err)\n           }\n        }\n        gettingBabies();\n    }, [])\n\n    const duplicateCheck = (array) => {\n        return new Set(array).size !== array.length\n    }\n\n    const handleSubmit = (e) => {\n        console.log(baby)\n        babies.babies.push(baby)\n        if(duplicateCheck(babies.babies)){\n            toast.error('Baby Already Made')\n        } else {\n        dispatch(getBabies(babies.babies))\n        fetch(\"/index.html\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            body: encode({\"form-name\": \"baby\", ...baby})\n        })\n            .then(() => alert(\"Submitted!\"))\n            .catch(error => console.log(error))\n        toast.success('Baby Made!')\n        }\n        \n        \n        e.preventDefault()\n    }\n\n    const showBabies = () => {\n        if(babies.babies === undefined) {\n            return <Spinner animation=\"border\" role=\"status\" />\n        } else {\n            console.log(babies)\n            const sortedBabies = babies.babies.sort()\n            return sortedBabies.map(baby => {\n                const position = sortedBabies.indexOf(baby) + 1\n                return(\n                    <div key={baby['baby-name']} style={{cursor: \"pointer\"}}>\n                        <li ><br></br>\n                            <p id={baby['baby-name']} >\n                               {position}. {baby['baby-name']}\n                            </p>\n                        </li>\n                    </div>\n                )\n            })\n        }\n    }\n\n    // const handleClick = async (e) => {\n    //     e.preventDefault()\n    //     let thisBaby = {}\n    //     for(let i = 0; i < babies.length; i++){\n    //         if(e.target.id === babies[i].baby_name){\n    //             thisBaby = babies[i]\n    //         }\n    //     }\n    //     if (thisBaby.enabled){\n    //         thisBaby.enabled = false\n    //     } else {\n    //         thisBaby.enabled = true\n    //     }\n    //     let element = document.getElementById(thisBaby.baby_name)\n    //     element.style.textDecorationLine = thisBaby.enabled ? \"none\" : \"line-through\"\n    //     let babyRequest = {\n    //         \"baby\": {\n    //             \"list_id\": thisBaby.list_id,\n    //             \"baby_name\": thisBaby.baby_name,\n    //             \"enabled\": thisBaby.enabled\n    //         }\n    //     }\n    //     try{\n    //         await patch('https://baby-maker-2000.netlify.app/.netlify/functions/update-baby', babyRequest)\n    //     } catch (err) {\n    //         console.log(err)\n    //     }\n    // }\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <form id=\"form\" name=\"baby\" data-netlify=\"true\" method=\"post\" onSubmit={handleSubmit}>\n                            <div>\n                                <label>Name! </label>\n                                <div>\n                                    <input required id=\"name-input\" placeholder=\"Baby Name!\" type=\"text\" name=\"baby-name\" value={baby['baby-name']} onChange={e => dispatch(babyName(e.target.value))} />\n                                    <input hidden type=\"text\" name=\"list-id\" value={baby['list-id']} />\n                                    {/* <input hidden name=\"enabled\" checkbox value=\"true\"/> */}\n                                </div>\n                            </div><br></br>\n                            <div>\n                                <button type=\"submit\" id=\"submit-button\">Make baby!</button>\n                            </div>\n                        </form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;"]},"metadata":{},"sourceType":"module"}
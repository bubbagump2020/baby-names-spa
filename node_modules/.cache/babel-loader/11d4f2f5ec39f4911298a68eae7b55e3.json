{"ast":null,"code":"import _regeneratorRuntime from\"/home/kevin/Documents/baby-names-spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kevin/Documents/baby-names-spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{useHistory}from'react-router-dom';import{post}from'axios';var SplashPage=function SplashPage(){var history=useHistory();React.useEffect(function(){var unique_id;var list_id;var makeList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return post(\"https://baby-maker-2000.netlify.app/.netlify/functions/new-list\");case 3:response=_context.sent;if(response.status===200){list_id=response.data.list.id;localStorage.setItem('user_id',list_id);unique_id=response.data.list.unique_id;localStorage.setItem('unique_id',unique_id);history.push(\"/lists/\".concat(unique_id));}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function makeList(){return _ref.apply(this,arguments);};}();makeList();},[]);return/*#__PURE__*/React.createElement(\"div\",null);};export default SplashPage;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/SplashPage.jsx"],"names":["React","useHistory","post","SplashPage","history","useEffect","unique_id","list_id","makeList","response","status","data","list","id","localStorage","setItem","push","console","log"],"mappings":"mTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,IAAT,KAAqB,OAArB,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAErB,GAAMC,CAAAA,OAAO,CAAGH,UAAU,EAA1B,CAEAD,KAAK,CAACK,SAAN,CAAgB,UAAM,CAClB,GAAIC,CAAAA,SAAJ,CACA,GAAIC,CAAAA,OAAJ,CACA,GAAMC,CAAAA,QAAQ,0FAAG,sLAGcN,CAAAA,IAAI,CAAC,iEAAD,CAHlB,QAGHO,QAHG,eAIT,GAAIA,QAAQ,CAACC,MAAT,GAAoB,GAAxB,CAA6B,CACzBH,OAAO,CAAGE,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,EAA7B,CACAC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgCR,OAAhC,EACAD,SAAS,CAAGG,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBN,SAA/B,CACAQ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCT,SAAlC,EACAF,OAAO,CAACY,IAAR,kBAAuBV,SAAvB,GACH,CAVQ,+EAYTW,OAAO,CAACC,GAAR,cAZS,oEAAH,kBAARV,CAAAA,QAAQ,0CAAd,CAeAA,QAAQ,GACX,CAnBD,CAmBG,EAnBH,EAqBA,mBACI,+BADJ,CAKH,CA9BD,CAgCA,cAAeL,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { post } from 'axios'\n\n\nconst SplashPage = () => {\n\n    const history = useHistory();\n\n    React.useEffect(() => {\n        let unique_id;\n        let list_id;\n        const makeList = async () => {\n            try {\n                // const response = await post(\"http://localhost:8888/.netlify/functions/new-list\")\n                const response = await post(\"https://baby-maker-2000.netlify.app/.netlify/functions/new-list\")\n                if (response.status === 200) {\n                    list_id = response.data.list.id\n                    localStorage.setItem('user_id', list_id)\n                    unique_id = response.data.list.unique_id;\n                    localStorage.setItem('unique_id', unique_id)\n                    history.push(`/lists/${unique_id}`);\n                }\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        makeList();\n    }, []);\n\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nexport default SplashPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { get } from 'axios';\nimport { getBabies } from '../redux/actions/baby-actions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { toast } from 'react-toastify';\nimport './BabyNameForm.css';\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst BabyNameForm = () => {\n  const dispatch = useDispatch();\n  const {\n    babiesList\n  } = useSelector(state => ({\n    babiesList: state.babiesList.babies\n  }));\n  const [baby, setBaby] = React.useState({\n    \"list-id\": parseInt(localStorage.getItem('user_id')),\n    \"baby-name\": \"\"\n  });\n  React.useEffect(() => {\n    const gettingBabies = async () => {\n      let babies = [];\n\n      try {\n        // const response = await get(\"http://localhost:8888/.netlify/functions/babies-index\")\n        const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index');\n\n        if (response.status === 200) {\n          babies = response.data;\n          dispatch(getBabies(babies));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    gettingBabies();\n  }, [dispatch]);\n\n  const showBabies = () => {\n    return babiesList.map(baby => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: baby.id,\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        onClick: handleClick,\n        id: baby.id,\n        style: {\n          textDecorationLine: baby.enabled ? \"none\" : \"line-through\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, baby.baby_name)));\n    });\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name, value);\n    setBaby({ ...baby,\n      \"baby-name\": value\n    });\n  }; // const handleClick = async (e) => {\n  //     e.preventDefault()\n  //     let thisBaby = {}\n  //     let babies = babiesList\n  //     for(let i = 0; i < babies.length; i++){\n  //         if(e.target.id === babies[i].id){\n  //             thisBaby = babies[i]\n  //         }\n  //     }\n  //     if (thisBaby.enabled){\n  //         thisBaby.enabled = false\n  //         dispatch(disableBaby(thisBaby.id))\n  //     } else {\n  //         thisBaby.enabled = true\n  //         dispatch(enableBaby(thisBaby.id))\n  //     }\n  //     let babyRequest = {\n  //         \"baby\": {\n  //             \"id\": thisBaby.id,\n  //             \"enabled\": thisBaby.enabled\n  //         }\n  //     }\n  //     try{\n  //         // await patch(`http://localhost:8888/.netlify/functions/update-baby`, babyRequest)\n  //         await patch(\"https://baby-maker-2000.netlify.app/.netlify/functions/update-baby\", babyRequest)\n  //     } catch (err) {\n  //         console.log(err)\n  //     }\n  // }\n\n\n  window.onload = function () {\n    let element = document.getElementById(\"name-list\");\n    element.scrollTop = element.scrollHeight;\n  };\n\n  const handleSubmit = e => {\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: encode({\n        \"form-name\": \"baby\",\n        ...baby\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.message) {\n        toast.error(data.message, {\n          position: \"top-center\",\n          progress: undefined,\n          closeOnClick: true,\n          hideProgressBar: true\n        });\n      } else {\n        console.log(data);\n        dispatch(getBabies(data));\n      }\n    }).catch(error => console.log(error));\n    e.preventDefault();\n  };\n\n  console.log(document.getElementById('name-input'));\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"The Baby Maker 2000\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, \"Simply put in a name and it'll be saved!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, \"Note: To return to this list save your URL some where safe\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    name: \"baby\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"form-name\",\n    value: \"baby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, \"Name! \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name-input\",\n    placeholder: \"Baby Name!\",\n    type: \"text\",\n    name: \"baby-name\",\n    value: baby[\"baby-name\"],\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    hidden: \"true\",\n    type: \"number\",\n    name: \"list-id\",\n    value: baby.list_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, \"Make baby!\"))))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Baby Names!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"name-list\",\n    style: {\n      listStyle: \"none\",\n      overflowAnchor: \"bottom\",\n      overflow: \"scroll\",\n      height: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, showBabies()))));\n};\n\nexport default BabyNameForm;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx"],"names":["React","useDispatch","get","getBabies","Container","Row","Col","Jumbotron","toast","encode","data","Object","keys","map","key","encodeURIComponent","join","BabyNameForm","dispatch","babiesList","useSelector","state","babies","baby","setBaby","useState","parseInt","localStorage","getItem","useEffect","gettingBabies","response","status","err","console","log","showBabies","id","cursor","handleClick","textDecorationLine","enabled","baby_name","handleChange","e","preventDefault","name","value","target","window","onload","element","document","getElementById","scrollTop","scrollHeight","handleSubmit","fetch","method","headers","body","then","json","message","error","position","progress","undefined","closeOnClick","hideProgressBar","catch","margin","list_id","fontSize","textAlign","listStyle","overflowAnchor","overflow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { get } from 'axios'\nimport { getBabies } from '../redux/actions/baby-actions'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport { toast } from 'react-toastify';\nimport './BabyNameForm.css'\n\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const dispatch = useDispatch();\n    const { babiesList } = useSelector(state => ({ babiesList: state.babiesList.babies }))\n    const [ baby, setBaby] = React.useState({ \n        \"list-id\": parseInt(localStorage.getItem('user_id')),\n        \"baby-name\": \"\"\n    })\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n\n           let babies = [];\n           try {\n                // const response = await get(\"http://localhost:8888/.netlify/functions/babies-index\")\n                const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                if (response.status === 200){\n                        babies = response.data\n                        dispatch(getBabies(babies))\n                }\n           } catch (err){\n                console.log(err)\n           }\n\n        }\n        gettingBabies();\n    }, [dispatch])\n\n    const showBabies = () => {\n        return babiesList.map(baby => {\n            return(\n                <div key={baby.id} style={{cursor: \"pointer\"}}>\n                    <li ><br></br>\n                        <p onClick={handleClick} id={baby.id} style={{textDecorationLine: baby.enabled ? \"none\" : \"line-through\",}}>\n                            {baby.baby_name}\n                        </p>\n                    </li>\n                </div>\n            )\n        })\n    }\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        const { name, value} = e.target\n        console.log(name, value)\n        setBaby({ ...baby, \"baby-name\": value })\n    }\n\n    // const handleClick = async (e) => {\n    //     e.preventDefault()\n    //     let thisBaby = {}\n    //     let babies = babiesList\n    //     for(let i = 0; i < babies.length; i++){\n    //         if(e.target.id === babies[i].id){\n    //             thisBaby = babies[i]\n    //         }\n    //     }\n    //     if (thisBaby.enabled){\n    //         thisBaby.enabled = false\n    //         dispatch(disableBaby(thisBaby.id))\n    //     } else {\n    //         thisBaby.enabled = true\n    //         dispatch(enableBaby(thisBaby.id))\n    //     }\n    //     let babyRequest = {\n    //         \"baby\": {\n    //             \"id\": thisBaby.id,\n    //             \"enabled\": thisBaby.enabled\n    //         }\n    //     }\n    //     try{\n    //         // await patch(`http://localhost:8888/.netlify/functions/update-baby`, babyRequest)\n    //         await patch(\"https://baby-maker-2000.netlify.app/.netlify/functions/update-baby\", babyRequest)\n    //     } catch (err) {\n    //         console.log(err)\n    //     }\n    // }\n\n    window.onload=function() {\n        let element = document.getElementById(\"name-list\")\n        element.scrollTop = element.scrollHeight\n    }\n\n    const handleSubmit = (e) => {\n        \n        fetch(\"/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n\n            body: encode({\"form-name\": \"baby\", ...baby})\n        })\n            .then(response => response.json())\n            .then(data =>{\n                if(data.message){\n                    toast.error(data.message, {\n                        position: \"top-center\",\n                        progress: undefined,\n                        closeOnClick: true,\n                        hideProgressBar: true,\n                    })\n                } else {\n                    console.log(data)\n                    dispatch(getBabies(data))\n                }\n            })\n            .catch(error => console.log(error))\n        e.preventDefault()\n    }\n\n    console.log(document.getElementById('name-input'))\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <form id=\"form\" onSubmit={handleSubmit} name=\"baby\" method=\"post\">\n                            <input type=\"hidden\" name=\"form-name\" value=\"baby\" />\n                            <div>\n                                <label>Name! </label>\n                                <div>\n                                    <input id=\"name-input\" placeholder=\"Baby Name!\" type=\"text\" name=\"baby-name\" value={baby[\"baby-name\"]} onChange={handleChange} />\n                                    <input hidden=\"true\" type=\"number\" name=\"list-id\" value={baby.list_id} />\n                                </div>\n                            </div><br></br>\n                            <div>\n                                <button type=\"submit\" id=\"submit-button\">Make baby!</button>\n                            </div>\n                        </form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;"]},"metadata":{},"sourceType":"module"}
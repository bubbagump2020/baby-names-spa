{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get, patch } from 'axios';\nimport { getBabies, enableBaby, disableBaby } from '../redux/actions/baby-actions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst BabyNameForm = () => {\n  const dispatch = useDispatch();\n  const {\n    babiesList\n  } = useSelector(state => ({\n    babiesList: state.babiesList.babies\n  }));\n  const [baby, setBaby] = React.useState({\n    list_id: parseInt(localStorage.getItem('user_id')),\n    baby_name: \"\"\n  });\n  React.useEffect(() => {\n    const gettingBabies = async () => {\n      let babies = [];\n\n      try {\n        const response = await get(\"http://localhost:8888/.netlify/functions/babies-index\"); // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n\n        if (response.status === 200) {\n          babies = response.data;\n          dispatch(getBabies(babies));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    gettingBabies();\n  }, [dispatch]);\n\n  const showBabies = () => {\n    return babiesList.map(baby => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: baby.id,\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        onClick: handleClick,\n        id: baby.id,\n        style: {\n          textDecorationLine: baby.enabled ? \"none\" : \"line-through\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, baby.baby_name)));\n    });\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setBaby({ ...baby,\n      baby_name: e.target.value\n    });\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let thisBaby = {};\n    let babies = babiesList;\n\n    for (let i = 0; i < babies.length; i++) {\n      if (e.target.id === babies[i].id) {\n        thisBaby = babies[i];\n      }\n    }\n\n    if (thisBaby.enabled) {\n      thisBaby.enabled = false;\n      dispatch(disableBaby(thisBaby.id));\n    } else {\n      thisBaby.enabled = true;\n      dispatch(enableBaby(thisBaby.id));\n    }\n\n    let babyRequest = {\n      \"baby\": {\n        \"id\": thisBaby.id,\n        \"enabled\": thisBaby.enabled\n      }\n    };\n\n    try {\n      // await patch(`http://localhost:8888/.netlify/functions/update-baby`, babyRequest)\n      await patch(\"https://baby-maker-2000.netlify.app/.netlify/functions/update-baby\", babyRequest);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  window.onload = function () {\n    let element = document.getElementById(\"name-list\");\n    element.scrollTop = element.scrollHeight;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: encode({\n        \"form-name\": \"baby\",\n        ...baby\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.message) {\n        toast.error(data.message, {\n          position: \"top-center\",\n          progress: undefined,\n          closeOnClick: true,\n          hideProgressBar: true\n        });\n      } else {\n        dispatch(getBabies(data));\n      }\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, \"The Baby Maker 2000\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Simply put in a name and it'll be saved!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Note: To return to this list save your URL some where safe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, \"Name!\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"baby-name\",\n    value: name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, \"Make baby!\"))))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Baby Names!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"name-list\",\n    style: {\n      listStyle: \"none\",\n      overflowAnchor: \"bottom\",\n      overflow: \"scroll\",\n      height: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, showBabies()))));\n};\n\nexport default BabyNameForm;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx"],"names":["React","useDispatch","useSelector","get","patch","getBabies","enableBaby","disableBaby","Container","Row","Col","Form","Jumbotron","Button","toast","encode","data","Object","keys","map","key","encodeURIComponent","join","BabyNameForm","dispatch","babiesList","state","babies","baby","setBaby","useState","list_id","parseInt","localStorage","getItem","baby_name","useEffect","gettingBabies","response","status","err","console","log","showBabies","id","cursor","handleClick","textDecorationLine","enabled","handleChange","e","preventDefault","target","value","thisBaby","i","length","babyRequest","window","onload","element","document","getElementById","scrollTop","scrollHeight","handleSubmit","fetch","method","headers","body","then","json","message","error","position","progress","undefined","closeOnClick","hideProgressBar","catch","margin","name","fontSize","textAlign","listStyle","overflowAnchor","overflow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector} from 'react-redux'\nimport { get, patch } from 'axios'\nimport { getBabies, enableBaby, disableBaby } from '../redux/actions/baby-actions'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport { toast } from 'react-toastify';\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const dispatch = useDispatch();\n    const { babiesList } = useSelector(state => ({ babiesList: state.babiesList.babies }))\n    const [ baby, setBaby] = React.useState({ \n        list_id: parseInt(localStorage.getItem('user_id')),\n        baby_name: \"\"\n    })\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n\n           let babies = [];\n           try {\n                const response = await get(\"http://localhost:8888/.netlify/functions/babies-index\")\n                // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                if (response.status === 200){\n                        babies = response.data\n                        dispatch(getBabies(babies))\n                }\n           } catch (err){\n                console.log(err)\n           }\n\n        }\n        gettingBabies();\n    }, [dispatch])\n\n    const showBabies = () => {\n        return babiesList.map(baby => {\n            return(\n                <div key={baby.id} style={{cursor: \"pointer\"}}>\n                    <li ><br></br>\n                        <p onClick={handleClick} id={baby.id} style={{textDecorationLine: baby.enabled ? \"none\" : \"line-through\",}}>\n                            {baby.baby_name}\n                        </p>\n                    </li>\n                </div>\n            )\n        })\n    }\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setBaby({ ...baby, baby_name: e.target.value })\n    }\n\n    const handleClick = async (e) => {\n        e.preventDefault()\n        let thisBaby = {}\n        let babies = babiesList\n        for(let i = 0; i < babies.length; i++){\n            if(e.target.id === babies[i].id){\n                thisBaby = babies[i]\n            }\n        }\n        if (thisBaby.enabled){\n            thisBaby.enabled = false\n            dispatch(disableBaby(thisBaby.id))\n        } else {\n            thisBaby.enabled = true\n            dispatch(enableBaby(thisBaby.id))\n        }\n        let babyRequest = {\n            \"baby\": {\n                \"id\": thisBaby.id,\n                \"enabled\": thisBaby.enabled\n            }\n        }\n        try{\n            // await patch(`http://localhost:8888/.netlify/functions/update-baby`, babyRequest)\n            await patch(\"https://baby-maker-2000.netlify.app/.netlify/functions/update-baby\", babyRequest)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    window.onload=function() {\n        let element = document.getElementById(\"name-list\")\n        element.scrollTop = element.scrollHeight\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"/\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: encode({\"form-name\": \"baby\", ...baby})\n        })\n            .then(response => response.json())\n            .then(data =>{\n                if(data.message){\n                    toast.error(data.message, {\n                        position: \"top-center\",\n                        progress: undefined,\n                        closeOnClick: true,\n                        hideProgressBar: true,\n                    })\n                } else {\n                    dispatch(getBabies(data))\n                }\n            })\n            .catch(error => console.log(error))\n    }\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <form onSubmit={handleSubmit}>\n                            <div>\n                                <label>Name!</label>\n                                <input type=\"text\" name=\"baby-name\" value={name} onChange={handleChange} />\n                            </div>\n                            <div>\n                                <button type=\"submit\">Make baby!</button>\n                            </div>\n\n                        </form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get, post, patch } from 'axios';\nimport { getBabies, enableBaby, disableBaby, addBaby } from '../redux/actions/baby-actions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nconst BabyNameForm = props => {\n  const dispatch = useDispatch();\n  const {\n    babiesList\n  } = useSelector(state => ({\n    babiesList: state.babiesList\n  }));\n  React.useEffect(() => {\n    const gettingBabies = async () => {\n      let response = null;\n      let babies = [];\n\n      try {\n        //    response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n        response = await get('http://localhost:8888/.netlify/functions/babies-index');\n\n        if (response.status === 200) {\n          console.log(response.data);\n          babies = response.data;\n          dispatch(getBabies(babies));\n        }\n      } catch {// Heavy duty error catching if needed\n      }\n    };\n\n    gettingBabies();\n  }, []);\n\n  const showBabies = () => {\n    let user = parseInt(localStorage.getItem('user_id'));\n    return babiesList.babies.map(baby => {\n      if (user === baby.list_id) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: baby.id,\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          onClick: handleClick,\n          id: baby.id,\n          style: {\n            textDecorationLine: baby.enabled ? \"none\" : \"line-through\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        }, baby.baby_name)));\n      }\n    });\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let thisBaby = {};\n    let babies = babiesList.babies;\n\n    for (let i = 0; i < babies.length; i++) {\n      if (parseInt(e.target.id) === babies[i].id) {\n        thisBaby = babies[i];\n      }\n    }\n\n    if (thisBaby.enabled) {\n      thisBaby.enabled = false;\n      dispatch(disableBaby(thisBaby.id));\n    } else {\n      thisBaby.enabled = true;\n      dispatch(enableBaby(thisBaby.id));\n    }\n\n    let request = {\n      \"baby\": {\n        \"enabled\": thisBaby.enabled\n      }\n    };\n\n    try {\n      await patch(`http://localhost:3001/babies/${thisBaby.id}`, request);\n    } catch {}\n  };\n\n  window.onload = function () {\n    let element = document.getElementById(\"name-list\");\n    element.scrollTop = element.scrollHeight;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const baby_name = document.getElementById(\"formBabyName\").value;\n    const babyRequest = {\n      \"baby\": {\n        \"list_id\": parseInt(localStorage.getItem(\"user_id\")),\n        \"baby_name\": baby_name\n      }\n    }; // fetch('http://localhost:8888/.netlify/functions/new-baby/', {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"Accept\": \"application/json\"\n    //     },\n    //     body: JSON.stringify({\n    //         \"baby\": {\n    //             \"list_id\": baby.list_id,\n    //             \"baby_name\": baby.baby_name\n    //         }\n    //     })\n    // })\n    // .then(response => response.json())\n    // .then(data => console.log(data))\n\n    try {\n      // response = await post('http://localhost:3001/babies', request)\n      const response = await post('http://localhost:8888/.netlify/functions/new-baby', babyRequest); // console.log(response)\n      // if(response.data.baby){\n      //     dispatch(addBaby(response.data.baby))\n      // }\n      // if(response.data.messages){\n      //     let messages = response.data.messages.length\n      //     messages.map(message => {\n      //         toast.error(message,{\n      //             position: \"top-center\",\n      //             hideProgressBar: true,\n      //         })\n      //     })\n      // }\n    } catch (err) {// Heavy duty error catching if needed\n    }\n  };\n\n  console.log(document.getElementById(\"baby-name\"));\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"The Baby Maker 2000\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"Simply put in a name and it'll be saved!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Note: To return to this list save your URL some where safe\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    name: \"baby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBabyName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, \"Name!\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Baby Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, \"Make Baby!\")))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Baby Names!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"name-list\",\n    style: {\n      listStyle: \"none\",\n      overflowAnchor: \"bottom\",\n      overflow: \"scroll\",\n      height: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, showBabies()))));\n};\n\nexport default BabyNameForm;","map":{"version":3,"sources":["/home/kevin/Documents/baby-names-spa/src/components/BabyNameForm.jsx"],"names":["React","useDispatch","useSelector","get","post","patch","getBabies","enableBaby","disableBaby","addBaby","Container","Row","Col","Form","Jumbotron","Button","toast","encode","data","Object","keys","map","key","encodeURIComponent","join","BabyNameForm","props","dispatch","babiesList","state","useEffect","gettingBabies","response","babies","status","console","log","showBabies","user","parseInt","localStorage","getItem","baby","list_id","id","cursor","handleClick","textDecorationLine","enabled","baby_name","e","preventDefault","thisBaby","i","length","target","request","window","onload","element","document","getElementById","scrollTop","scrollHeight","handleSubmit","value","babyRequest","err","margin","fontSize","textAlign","listStyle","overflowAnchor","overflow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector} from 'react-redux'\nimport { get, post, patch } from 'axios'\nimport { getBabies, enableBaby, disableBaby, addBaby } from '../redux/actions/baby-actions'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport { toast } from 'react-toastify';\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\");\n}\n\nconst BabyNameForm = (props) => {\n\n    const dispatch = useDispatch();\n    const { babiesList } = useSelector(state => ({ babiesList: state.babiesList }))\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n           let response = null;\n           let babies = [];\n           try {\n            //    response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n               response = await get('http://localhost:8888/.netlify/functions/babies-index')\n               if (response.status === 200){\n                    console.log(response.data)\n                    babies = response.data\n                    dispatch(getBabies(babies))\n               }\n           } catch{\n                // Heavy duty error catching if needed\n           }\n\n        }\n        gettingBabies();\n    }, [])\n\n    const showBabies = () => {\n        let user = parseInt(localStorage.getItem('user_id'))\n        return babiesList.babies.map(baby => {\n            if (user === baby.list_id){\n                return(\n                    <div key={baby.id} style={{cursor: \"pointer\"}}>\n                        <li><br></br>\n                            <p onClick={handleClick} id={baby.id} style={{textDecorationLine: baby.enabled ? \"none\" : \"line-through\",}}>\n                                {baby.baby_name}\n                            </p>\n                        </li>\n                    </div>\n                )\n            }\n        })\n    }\n\n    const handleClick = async (e) => {\n        e.preventDefault()\n        let thisBaby = {}\n        let babies = babiesList.babies\n        for(let i = 0; i < babies.length; i++){\n            if(parseInt(e.target.id) === babies[i].id){\n                thisBaby = babies[i]\n            }\n        }\n        if (thisBaby.enabled){\n            thisBaby.enabled = false\n            dispatch(disableBaby(thisBaby.id))\n        } else {\n            thisBaby.enabled = true\n            dispatch(enableBaby(thisBaby.id))\n        }\n        let request = {\n            \"baby\": {\n                \"enabled\": thisBaby.enabled\n            }\n        }\n        try{\n            await patch(`http://localhost:3001/babies/${thisBaby.id}`, request)\n        } catch{\n\n        }\n    }\n\n    window.onload=function() {\n        let element = document.getElementById(\"name-list\")\n        element.scrollTop = element.scrollHeight\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const baby_name = document.getElementById(\"formBabyName\").value\n        const babyRequest = {\n            \"baby\": {\n                \"list_id\": parseInt(localStorage.getItem(\"user_id\")),\n                \"baby_name\": baby_name\n            }\n        }\n        // fetch('http://localhost:8888/.netlify/functions/new-baby/', {\n        //     method: \"POST\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //         \"Accept\": \"application/json\"\n        //     },\n        //     body: JSON.stringify({\n        //         \"baby\": {\n        //             \"list_id\": baby.list_id,\n        //             \"baby_name\": baby.baby_name\n        //         }\n        //     })\n        // })\n            // .then(response => response.json())\n            // .then(data => console.log(data))\n        \n\n        try{\n            // response = await post('http://localhost:3001/babies', request)\n            const response = await post('http://localhost:8888/.netlify/functions/new-baby', babyRequest)\n            // console.log(response)\n            // if(response.data.baby){\n            //     dispatch(addBaby(response.data.baby))\n            // }\n            // if(response.data.messages){\n            //     let messages = response.data.messages.length\n            //     messages.map(message => {\n            //         toast.error(message,{\n            //             position: \"top-center\",\n            //             hideProgressBar: true,\n            //         })\n            //     })\n            // }\n        } catch(err){\n            // Heavy duty error catching if needed\n        }\n    }\n\n    console.log(document.getElementById(\"baby-name\"))\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <Form onSubmit={handleSubmit} name=\"baby\">\n                            <Form.Group controlId=\"formBabyName\">\n                                <Form.Label>Name!</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Baby Name\" />\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Make Baby!\n                            </Button>\n                        </Form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/SplashPage.jsx","redux/action-types/baby-action-types.js","redux/actions/baby-actions.js","components/BabyNameForm.jsx","App.js","redux/reducers/babies.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["SplashPage","useHistory","React","useEffect","a","makeList","babyActions","enableBaby","payload","type","actions","BabyNameForm","dispatch","useDispatch","babiesList","useSelector","state","useState","baby","list_id","parseInt","localStorage","getItem","setBaby","babies","get","response","status","data","console","log","gettingBabies","handleClick","e","preventDefault","thisBaby","i","length","target","id","enabled","babyRequest","patch","window","onload","element","document","getElementById","scrollTop","scrollHeight","handleSubmit","baby_name","Container","style","margin","Row","Col","Jumbotron","Form","name","method","onSubmit","value","Group","Label","Control","placeholder","onChange","hidden","Button","variant","fontSize","textAlign","listStyle","overflowAnchor","overflow","height","user","map","key","cursor","onClick","textDecorationLine","showBabies","App","exact","path","component","initialState","action","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.6dff4c9e.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { post } from 'axios'\n\n\nconst SplashPage = () => {\n\n    const history = useHistory();\n\n    React.useEffect(() => {\n        let unique_id;\n        let list_id;\n        const makeList = async () => {\n            try {\n                // const response = await post(\"https://baby-maker-2000-d48f10.netlify.live/.netlify/functions/new-list\")\n                // const response = await post(\"https://baby-maker-2000.netlify.app/.netlify/functions/new-list\")\n                // if (response.status === 200) {\n                    // list_id = response.data.list.id\n                    // localStorage.setItem('user_id', list_id)\n                    // unique_id = response.data.list.unique_id;\n                    // localStorage.setItem('unique_id', unique_id)\n                    // history.push(`/lists/${unique_id}`);\n                // }\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        makeList();\n    });\n\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nexport default SplashPage;","export const babyActions = {\n    GET_BABIES: 'GET_BABIES',\n    ADD_BABY: 'ADD_BABY',\n    ENABLE_BABY: 'ENABLE_BABY',\n    DISABLE_BABY: 'DISABLE_BABY'\n}","import * as actions from '../action-types/index'\n\nexport const getBabies = (payload) => {\n    return { type: actions.babyActions.GET_BABIES, payload }\n}\n\nexport const enableBaby = (payload) => {\n    return { type: actions.babyActions.ENABLE_BABY, payload }\n}\n\nexport const disableBaby = (payload) => {\n    return { type: actions.babyActions.DISABLE_BABY, payload }\n}\n\nexport const addBaby = (payload) => {\n    return { type: actions.babyActions.ADD_BABY, payload}\n}","import React from 'react';\nimport { useDispatch, useSelector} from 'react-redux'\nimport { get, patch } from 'axios'\nimport { getBabies, enableBaby, disableBaby } from '../redux/actions/baby-actions'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const dispatch = useDispatch();\n    const { babiesList } = useSelector(state => ({ babiesList: state.babiesList }))\n    const [ baby, setBaby] = React.useState({\n        baby: {\n            list_id: parseInt(localStorage.getItem('user_id')),\n            \"baby_name\": \"\"\n        }\n    })\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n\n           let babies = [];\n           try {\n                const response = await get(\"https://baby-maker-2000-d48f10.netlify.live/.netlify/functions/babies-index\")\n                // const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                if (response.status === 200){\n                        babies = response.data\n                        dispatch(getBabies(babies))\n                }\n           } catch (err){\n                console.log(err)\n           }\n\n        }\n        gettingBabies();\n    }, [])\n\n    const showBabies = () => {\n        let user = parseInt(localStorage.getItem(\"user_id\"))\n        return babiesList.babies.map(baby => {\n            if (user === baby.list_id){\n                return(\n                    <div key={baby.id} style={{cursor: \"pointer\"}}>\n                        <li><br></br>\n                            <p onClick={handleClick} id={baby.id} style={{textDecorationLine: baby.enabled ? \"none\" : \"line-through\",}}>\n                                {baby.baby_name}\n                            </p>\n                        </li>\n                    </div>\n                )\n            }\n        })\n    }\n\n    const handleClick = async (e) => {\n        e.preventDefault()\n        let thisBaby = {}\n        let babies = babiesList.babies\n        for(let i = 0; i < babies.length; i++){\n            if(parseInt(e.target.id) === babies[i].id){\n                thisBaby = babies[i]\n            }\n        }\n        if (thisBaby.enabled){\n            thisBaby.enabled = false\n            dispatch(disableBaby(thisBaby.id))\n        } else {\n            thisBaby.enabled = true\n            dispatch(enableBaby(thisBaby.id))\n        }\n        let babyRequest = {\n            \"baby\": {\n                \"id\": thisBaby.id,\n                \"enabled\": thisBaby.enabled\n            }\n        }\n        try{\n            // await patch(`http://localhost:8888/.netlify/functions/update-baby`, babyRequest)\n            await patch(\"https://baby-maker-2000.netlify.app/.netlify/functions/update-baby\", babyRequest)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    window.onload=function() {\n        let element = document.getElementById(\"name-list\")\n        element.scrollTop = element.scrollHeight\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        console.log(`${baby.baby_name}`)\n    }\n\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <Form name=\"baby\" method=\"post\" onSubmit={handleSubmit}>\n                            <input type=\"hidden\" name=\"form-name\" value=\"baby\" />\n                            <Form.Group>\n                                <Form.Label>Name!</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Baby Name\" name=\"baby-name\" onChange={e => setBaby({...baby, baby_name: e.target.value})}/>\n                                <Form.Control type=\"number\" hidden name=\"list-id\" value={parseInt(localStorage.getItem('user_id'))}/>\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Make Baby!\n                            </Button>\n                        </Form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport SplashPage from './components/SplashPage'\nimport BabyNameForm from './components/BabyNameForm'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n      <div>\n        <Route exact path=\"/\">\n          <SplashPage />\n        </Route>\n        <Route exact path=\"/lists/:list_id\" component={BabyNameForm}/>\n        <ToastContainer />\n      </div>\n  );\n}\n\nexport default App;\n","import { babyActions } from '../action-types/index'\n\nconst initialState = {\n    babies: []\n}\n\nexport function babiesList(state = initialState, action){\n    switch(action.type){\n        case babyActions.GET_BABIES:\n            return{\n                ...state,\n                babies: action.payload\n            }\n        case babyActions.ENABLE_BABY:\n            return{\n                ...state,\n                babies: state.babies.map(baby => baby.id === action.payload ?\n                    { ...baby, enabled: true } : baby   \n                )\n            }\n        case babyActions.DISABLE_BABY:\n            return{\n                ...state,\n                babies: state.babies.map(baby => baby.id === action.payload ?\n                    { ...baby, enabled: false } : baby    \n                )\n            }\n        case babyActions.ADD_BABY:\n            return{\n                ...state,\n                babies: [ ...state.babies, action.payload]\n            }\n        default:\n            return state\n    }\n}\n\nexport default babiesList;","import { combineReducers } from 'redux'\nimport babiesList from '../reducers/babies'\n\nconst rootReducer = combineReducers({\n    babiesList,\n})\n\nexport default rootReducer","import { createStore } from 'redux'\nimport rootReducer from '../reducers/index'\nimport storage from 'redux-persist/lib/storage'\nimport {persistStore, persistReducer} from 'redux-persist'\n\nconst persistConfig = {\n    key: 'root',\n    storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport { store, persistor} from './redux/store/store'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
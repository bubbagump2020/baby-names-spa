{"version":3,"sources":["components/SplashPage.jsx","redux/action-types/baby-action-types.js","redux/actions/baby-actions.js","components/BabyNameForm.jsx","App.js","redux/reducers/babies.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["SplashPage","history","useHistory","React","useEffect","unique_id","list_id","a","post","response","status","console","log","data","list","id","localStorage","setItem","push","makeList","babyActions","getBabies","payload","type","actions","enableBaby","BabyNameForm","dispatch","useDispatch","babiesList","useSelector","state","babies","useState","parseInt","getItem","baby_name","baby","setBaby","get","gettingBabies","handleClick","e","preventDefault","thisBaby","i","length","target","enabled","babyRequest","patch","window","onload","element","document","getElementById","scrollTop","scrollHeight","Container","style","margin","Row","Col","Jumbotron","Form","onSubmit","fetch","method","headers","body","Object","keys","map","key","encodeURIComponent","join","then","json","message","toast","error","position","progress","undefined","closeOnClick","hideProgressBar","catch","Group","Label","Control","placeholder","name","onChange","value","handleChange","Button","variant","fontSize","textAlign","listStyle","overflowAnchor","overflow","height","cursor","onClick","textDecorationLine","App","exact","path","component","initialState","action","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.8b7a5849.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { post } from 'axios'\n\n\nconst SplashPage = () => {\n\n    const history = useHistory();\n\n    React.useEffect(() => {\n        let unique_id;\n        let list_id;\n        const makeList = async () => {\n            try {\n                // const response = await post(\"http://localhost:8888/.netlify/functions/new-list\")\n                const response = await post(\"https://baby-maker-2000.netlify.app/.netlify/functions/new-list\")\n                if (response.status === 200) {\n                    console.log(response)\n                    list_id = response.data.list.id\n                    localStorage.setItem('user_id', list_id)\n                    unique_id = response.data.list.unique_id;\n                    localStorage.setItem('unique_id', unique_id)\n                    history.push(`/lists/${unique_id}`);\n                }\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        makeList();\n    }, []);\n\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nexport default SplashPage;","export const babyActions = {\n    GET_BABIES: 'GET_BABIES',\n    ADD_BABY: 'ADD_BABY',\n    ENABLE_BABY: 'ENABLE_BABY',\n    DISABLE_BABY: 'DISABLE_BABY'\n}","import * as actions from '../action-types/index'\n\nexport const getBabies = (payload) => {\n    return { type: actions.babyActions.GET_BABIES, payload }\n}\n\nexport const enableBaby = (payload) => {\n    return { type: actions.babyActions.ENABLE_BABY, payload }\n}\n\nexport const disableBaby = (payload) => {\n    return { type: actions.babyActions.DISABLE_BABY, payload }\n}\n\nexport const addBaby = (payload) => {\n    return { type: actions.babyActions.ADD_BABY, payload}\n}","import React from 'react';\nimport { useDispatch, useSelector} from 'react-redux'\nimport { get, patch } from 'axios'\nimport { getBabies, enableBaby, disableBaby } from '../redux/actions/baby-actions'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport { toast } from 'react-toastify';\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\")\n}\n\nconst BabyNameForm = () => {\n\n    const dispatch = useDispatch();\n    const { babiesList } = useSelector(state => ({ babiesList: state.babiesList.babies }))\n    const [ baby, setBaby] = React.useState({ \n        list_id: parseInt(localStorage.getItem('user_id')),\n        baby_name: \"\"\n    })\n\n    React.useEffect(() => {\n        const gettingBabies = async () => {\n\n           let babies = [];\n           try {\n                // const response = await get(\"http://localhost:8888/.netlify/functions/babies-index\")\n                const response = await get('https://baby-maker-2000.netlify.app/.netlify/functions/babies-index')\n                if (response.status === 200){\n                        babies = response.data\n                        dispatch(getBabies(babies))\n                }\n           } catch (err){\n                console.log(err)\n           }\n\n        }\n        gettingBabies();\n    })\n\n    const showBabies = () => {\n        return babiesList.map(baby => {\n            return(\n                <div key={baby.id} style={{cursor: \"pointer\"}}>\n                    <li ><br></br>\n                        <p onClick={handleClick} id={baby.id} style={{textDecorationLine: baby.enabled ? \"none\" : \"line-through\",}}>\n                            {baby.baby_name}\n                        </p>\n                    </li>\n                </div>\n            )\n        })\n    }\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setBaby({ ...baby, baby_name: e.target.value })\n    }\n\n    const handleClick = async (e) => {\n        e.preventDefault()\n        let thisBaby = {}\n        let babies = babiesList\n        for(let i = 0; i < babies.length; i++){\n            if(e.target.id === babies[i].id){\n                thisBaby = babies[i]\n            }\n        }\n        if (thisBaby.enabled){\n            thisBaby.enabled = false\n            dispatch(disableBaby(thisBaby.id))\n        } else {\n            thisBaby.enabled = true\n            dispatch(enableBaby(thisBaby.id))\n        }\n        let babyRequest = {\n            \"baby\": {\n                \"id\": thisBaby.id,\n                \"enabled\": thisBaby.enabled\n            }\n        }\n        try{\n            // await patch(`http://localhost:8888/.netlify/functions/update-baby`, babyRequest)\n            await patch(\"https://baby-maker-2000.netlify.app/.netlify/functions/update-baby\", babyRequest)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    window.onload=function() {\n        let element = document.getElementById(\"name-list\")\n        element.scrollTop = element.scrollHeight\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"/\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: encode({\"form-name\": \"baby\", ...baby})\n        })\n            .then(response => response.json())\n            .then(data =>{\n                if(data.message){\n                    toast.error(data.message, {\n                        position: \"top-center\",\n                        progress: undefined,\n                        closeOnClick: true,\n                        hideProgressBar: true,\n                    })\n                } else {\n                    dispatch(getBabies(data))\n                }\n            })\n            .catch(error => console.log(error))\n    }\n\n    return(\n        <Container style={{ margin: '10px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron>\n                        <h1>The Baby Maker 2000</h1>\n                        <p>Simply put in a name and it'll be saved!</p>\n                        <p>Note: To return to this list save your URL some where safe</p>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group>\n                                <Form.Label>Name!</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Baby Name\" name=\"baby-name\" onChange={e => handleChange(e)}/>\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Make Baby!\n                            </Button>\n                        </Form>\n                    </Jumbotron>\n                </Col>\n                <Col style={{fontSize: \"24px\", textAlign: \"center\"}}>\n                    <h1>Baby Names!</h1>\n                    <ul id=\"name-list\" style={{listStyle: \"none\", overflowAnchor: \"bottom\", overflow: \"scroll\", height: \"50vh\"}}>\n                        {showBabies()}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BabyNameForm;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport SplashPage from './components/SplashPage'\nimport BabyNameForm from './components/BabyNameForm'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n      <div>\n        <Route exact path=\"/\">\n          <SplashPage />\n        </Route>\n        <Route exact path=\"/lists/:list_id\" component={BabyNameForm}/>\n        <ToastContainer />\n      </div>\n  );\n}\n\nexport default App;\n","import { babyActions } from '../action-types/index'\n\nconst initialState = {\n    babies: []\n}\n\nexport function babiesList(state = initialState, action){\n    switch(action.type){\n        case babyActions.GET_BABIES:\n            return{\n                ...state,\n                babies: action.payload\n            }\n        case babyActions.ENABLE_BABY:\n            return{\n                ...state,\n                babies: state.babies.map(baby => baby.id === action.payload ?\n                    { ...baby, enabled: true } : baby   \n                )\n            }\n        case babyActions.DISABLE_BABY:\n            return{\n                ...state,\n                babies: state.babies.map(baby => baby.id === action.payload ?\n                    { ...baby, enabled: false } : baby    \n                )\n            }\n        case babyActions.ADD_BABY:\n            return{\n                ...state,\n                babies: [ ...state.babies, action.payload]\n            }\n        default:\n            return state\n    }\n}\n\nexport default babiesList;","import { combineReducers } from 'redux'\nimport babiesList from '../reducers/babies'\n\nconst rootReducer = combineReducers({\n    babiesList,\n})\n\nexport default rootReducer","import { createStore } from 'redux'\nimport rootReducer from '../reducers/index'\nimport storage from 'redux-persist/lib/storage'\nimport {persistStore, persistReducer} from 'redux-persist'\n\nconst persistConfig = {\n    key: 'root',\n    storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport { store, persistor} from './redux/store/store'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}